version: '2'

services:
  generation0:
    image: djedjethai/generation-compose:0.0.1
    restart: always
    ports:
      #  #  - "8080:8080"
      - "8400:8400"
    environment:
      PORT: "3000" # for http only
      PROTOCOL: grpc
      APP_NAME: generation
      SERVICE_NAME: service0
      CONFIG_FILE: /config/config.yaml 
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      # - /home/jerome/Documents/projects/generationProject/generation/.generation:/config/.generation
      - /home/jerome/Documents/projects/generationProject/generation/devConfig:/config
      - /home/jerome/Documents/projects/generationProject/generation/data:/data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  
  generation1:
    image: djedjethai/generation-compose:0.0.1
    restart: always
    ports:
      #  #  - "8080:8080"
      - "8401:8400"
    environment:
      PORT: "3000" # for http only
      PROTOCOL: grpc
      APP_NAME: generation
      SERVICE_NAME: service0
      CONFIG_FILE: /config/config.yaml 
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      # - /home/jerome/Documents/projects/generationProject/generation/.generation:/config/.generation
      - /home/jerome/Documents/projects/generationProject/generation/devConfig0:/config
      - /home/jerome/Documents/projects/generationProject/generation/data0:/data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  client:
    #image: djedjethai/generation-docker-client:0.0.1
    build:
      context: ./clientGenerationServ 
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - /home/jerome/Documents/projects/generationProject/clientGenerationServ/.generation:/.generation
      #  - "8400:8400"
    



# version: '2'
# 
# services:
#   generation:
#     # image: djedjethai/generation:0.0.20
#     build:
#      context: .
#     restart: always
#     ports:
#       # - "1-65535:1-65535"
#       - "8080:8080"
#       - "8400:8400"
#       # - "8401"
#         #healthcheck:
#         #  test:  ["CMD", "/bin/grpc_health_probe", "-addr=0.0.0.0:8500"]
#         #  interval: 20s
#         #  timeout: 10s
#         #  retries: 5
#     environment:
#       PORT: "3000" # for http only
#       PROTOCOL: grpc
#       APP_NAME: generation
#       SERVICE_NAME: service0
#       CONFIG_FILE: /config/config.yaml 
#     deploy:
#       mode: replicated
#       replicas: 1
#     volumes:
#       - /home/jerome/Documents/projects/generationProject/generation/.generation:/config/.generation
#       - /home/jerome/Documents/projects/generationProject/generation/devConfig:/config
#       - /home/jerome/Documents/projects/generationProject/generation/data:/data
        #    networks:
        #      - host
        #
        #networks:
        #  host:
        #    name: host
        #    external: true




        #    networks:
        #      vpcbr:
        #        ipv4_address: 10.5.0.5  
        #
        #networks:
        #  vpcbr:
        #    driver: bridge
        #    ipam:
        #     config:
        #       - subnet: 10.5.0.0/16
        #         gateway: 10.5.0.1




        #postgres:
        #  image: 'postgres:14.2'
        #  ports:
        #    - "5432:5432"
        #  deploy:
        #    mode: replicated
        #    replicas: 1
        #  environment:
        #    POSTGRES_USER: postgres
        #    POSTGRES_PASSWORD: password
        #    POSTGRES_DB: transactions
        #  healthcheck:
        #    test: ["CMD-SHELL", "pg_isready -d transactions -U postgres"]
        #    interval: 30s
        #    timeout: 60s
        #    retries: 5
        #    start_period: 80s
        #  volumes:
        #    - ./db-data/postgres/:/var/lib/postgresql/data/
        #  networks:
        #    - mynet
        #
        #prometheus:
        #  image: 'prom/prometheus:v2.23.0'
        #  ports:
        #    - "9090:9090"
        #  volumes:
        #    - ./prometheus.yml:/etc/prometheus/prometheus.yml
        #  networks:
        #    - mynet
        #
        #jaeger:
        #  image: jaegertracing/all-in-one:1.21
        #  restart: always
        #  ports:
        #    - "5775:5775/udp"
        #    - "6831:6831/udp"
        #    - "6832:6832/udp"
        #    - "5778:5778"
        #    - "16686:16686"
        #    - "14268:14268"
        #    - "14250:14250"
        #    - "9411:9411"        
        #  networks:
        #    - mynet
       











